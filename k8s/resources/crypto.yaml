apiVersion: v1
kind: Namespace
metadata:
  name: crypto
  labels:
    name: crypto
########
# CRYPTO-CLIENT
########
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: crypto-client-rs
  namespace: crypto
spec:
  replicas: 3
  selector:
    matchLabels:
      app: crypto-client
  template:
    metadata:
      labels:
        app: crypto-client
    spec:
      containers:
        - name: crypto-client
          image: austinloveless/crypto-client
          envFrom:
            - secretRef:
                name: client-secrets
            - configMapRef:
                name: client-configmap
          env:
            - name: SVC
              value: crypto-server-service
            - name: NAMESPACE
              value: crypto
      volumes:
        - name: client
          secret:
            secretName: client-secrets
########
# CRYPTO-SERVER
########
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: crypto-server-rs
  namespace: crypto
spec:
  replicas: 3
  selector:
    matchLabels:
      app: crypto-server
  template:
    metadata:
      labels:
        app: crypto-server
    spec:
      containers:
        - name: crypto-server
          image: austinloveless/crypto-server
          envFrom:
            - secretRef:
                name: server-secrets
          ports:
            - containerPort: 8080
      volumes:
        - name: server
          secret:
            secretName: server-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: crypto-server-service
  namespace: crypto
spec:
  selector:
    app: crypto-server
  ports:
    - name: crypto-server
      port: 80
      targetPort: 8080
      nodePort: 80001
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: crypto-server-ingress
  namespace: crypto
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: crypto-server-service
                port:
                  number: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: client-secrets
  namespace: crypto
data:
  ACCESS_KEY_ID: QUtJQVUyN05FWUs3V05IMzdBNlIK
  SECRET_ACCESS_KEY: amFxL0xhcVJ6T21OenM4VmNqOU1wTXpPV3o0SUc5a2JWei9NRjIvZQo=

---
apiVersion: v1
kind: Secret
metadata:
  name: server-secrets
  namespace: crypto
data:
  API_KEY: NGNhODM5ODUtZWVhNS00MmZhLTkwZWEtZjIyZWM0OTVlZDUwCg==

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: client-configmap
  namespace: crypto
data:
  DATEBASE_NAME: AWSMeetupGroupESDB
  TABLE_NAME: CryptoData
  AWS_REGION: us-east-1
  CRYPTO_SYMBOL: BCH
